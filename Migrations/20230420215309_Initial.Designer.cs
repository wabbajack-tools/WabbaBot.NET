// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WabbaBot;

#nullable disable

namespace Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20230420215309_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MaintainerManagedModlist", b =>
                {
                    b.Property<int>("MaintainersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManagedModlistsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaintainersId", "ManagedModlistsId");

                    b.HasIndex("ManagedModlistsId");

                    b.ToTable("MaintainerManagedModlist");
                });

            modelBuilder.Entity("ManagedModlistSubscribedChannel", b =>
                {
                    b.Property<int>("ManagedModlistsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubscribedChannelsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManagedModlistsId", "SubscribedChannelsId");

                    b.HasIndex("SubscribedChannelsId");

                    b.ToTable("ManagedModlistSubscribedChannel");
                });

            modelBuilder.Entity("WabbaBot.Models.Maintainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CachedName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscordUserId")
                        .IsUnique();

                    b.ToTable("Maintainers");
                });

            modelBuilder.Entity("WabbaBot.Models.ManagedModlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("MachineURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineURL")
                        .IsUnique();

                    b.ToTable("ManagedModlists");
                });

            modelBuilder.Entity("WabbaBot.Models.PingRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManagedModlistId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscordRoleId");

                    b.HasIndex("ManagedModlistId");

                    b.ToTable("PingRoles");
                });

            modelBuilder.Entity("WabbaBot.Models.Release", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ManagedModlistId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ManagedModlistId");

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("WabbaBot.Models.ReleaseMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaintainerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManagedModlistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubscribedChannelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiscordMessageId")
                        .IsUnique();

                    b.HasIndex("MaintainerId");

                    b.HasIndex("ManagedModlistId");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("SubscribedChannelId");

                    b.ToTable("ReleaseMessages");
                });

            modelBuilder.Entity("WabbaBot.Models.ReleaseTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ManagedModlistId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ManagedModlistId")
                        .IsUnique();

                    b.ToTable("ReleaseTemplates");
                });

            modelBuilder.Entity("WabbaBot.Models.SubscribedChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CachedName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscordChannelId")
                        .IsUnique();

                    b.ToTable("SubscribedChannels");
                });

            modelBuilder.Entity("MaintainerManagedModlist", b =>
                {
                    b.HasOne("WabbaBot.Models.Maintainer", null)
                        .WithMany()
                        .HasForeignKey("MaintainersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WabbaBot.Models.ManagedModlist", null)
                        .WithMany()
                        .HasForeignKey("ManagedModlistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManagedModlistSubscribedChannel", b =>
                {
                    b.HasOne("WabbaBot.Models.ManagedModlist", null)
                        .WithMany()
                        .HasForeignKey("ManagedModlistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WabbaBot.Models.SubscribedChannel", null)
                        .WithMany()
                        .HasForeignKey("SubscribedChannelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WabbaBot.Models.PingRole", b =>
                {
                    b.HasOne("WabbaBot.Models.ManagedModlist", "ManagedModlist")
                        .WithMany("PingRoles")
                        .HasForeignKey("ManagedModlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagedModlist");
                });

            modelBuilder.Entity("WabbaBot.Models.Release", b =>
                {
                    b.HasOne("WabbaBot.Models.ManagedModlist", "ManagedModlist")
                        .WithMany()
                        .HasForeignKey("ManagedModlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagedModlist");
                });

            modelBuilder.Entity("WabbaBot.Models.ReleaseMessage", b =>
                {
                    b.HasOne("WabbaBot.Models.Maintainer", "Maintainer")
                        .WithMany("ReleaseMessages")
                        .HasForeignKey("MaintainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WabbaBot.Models.ManagedModlist", "ManagedModlist")
                        .WithMany("ReleaseMessages")
                        .HasForeignKey("ManagedModlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WabbaBot.Models.Release", "Release")
                        .WithMany("ReleaseMessages")
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WabbaBot.Models.SubscribedChannel", "SubscribedChannel")
                        .WithMany("ReleaseMessages")
                        .HasForeignKey("SubscribedChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maintainer");

                    b.Navigation("ManagedModlist");

                    b.Navigation("Release");

                    b.Navigation("SubscribedChannel");
                });

            modelBuilder.Entity("WabbaBot.Models.ReleaseTemplate", b =>
                {
                    b.HasOne("WabbaBot.Models.ManagedModlist", "ManagedModlist")
                        .WithOne("ReleaseTemplate")
                        .HasForeignKey("WabbaBot.Models.ReleaseTemplate", "ManagedModlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagedModlist");
                });

            modelBuilder.Entity("WabbaBot.Models.Maintainer", b =>
                {
                    b.Navigation("ReleaseMessages");
                });

            modelBuilder.Entity("WabbaBot.Models.ManagedModlist", b =>
                {
                    b.Navigation("PingRoles");

                    b.Navigation("ReleaseMessages");

                    b.Navigation("ReleaseTemplate")
                        .IsRequired();
                });

            modelBuilder.Entity("WabbaBot.Models.Release", b =>
                {
                    b.Navigation("ReleaseMessages");
                });

            modelBuilder.Entity("WabbaBot.Models.SubscribedChannel", b =>
                {
                    b.Navigation("ReleaseMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
